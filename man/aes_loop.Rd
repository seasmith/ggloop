% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aes.loop.R
\name{aes_loop}
\alias{aes_loop}
\title{Create a list of grouped aesthetic mappings.}
\usage{
aes_loop(x, y, ...)
}
\arguments{
\item{x, y, ...}{A vector of variable names or a single double-dot wrapped data
type (see details). Vector can consist of a combination of
\code{dplyr}-like symbols (unqouted names) and \code{numerics/integers}
referencing the variable position within \code{data}.}
}
\value{
\code{aes_loop()} first returns a function and then that function is called
within \code{ggloop()} to take advantage to access to \code{ggloop()}'s
environment (data frame, columns names, column types, etc).
}
\description{
\code{aes_loop} cannot be used affectively outside of \code{ggloop()} (or at
least cannot be used without access to the data frame names).
}
\details{
\code{aes_loop()} is solely meant to be called within
\code{ggloop()}. To create the raw list of grouped mappings, set
\code{ggloop()}'s \code{gg_obs} argument to \code{FALSE}.

Variables can be called by their class by using double-dot wrapped syntax
(i.e. \code{..numeric..} for class \code{numeric}, \code{..Date..} for class
\code{Date}, and even user-built classes such as \code{..myClass..} for class
\code{myClass}). There are three built-in double-dot wrapped values:
\itemize{
  \item{\code{..all..} = Supply all columns to an aesthetic.}
  \item{\code{..number..} = Supply \code{integer} and \code{numeric} columns to an aesthetic.}
  \item{\code{..string..} = Supply \code{character} and \code{factor} columns to an aesthetic.}}
}

